<project
    name="Datachalenge"
    default="build"
    basedir=".">

    <property name="jar" value="dach-cohort.jar"/>

    <property name="srcdir" value="./src"/>
    <property name="builddir" value="./build"/>
    <property name="distdir" value="./jars"/>
   
<!--
    <property file="./build.properties"/>
    <property name="includes" value="./build-includes"/>
    <property file="${includes}/${os.name}-${os.arch}.properties" />
-->

    <!-- Internal target - Preparations for building. -->
    <target name="prepare"> 
    	<mkdir dir="${distdir}" />
        <mkdir dir="${builddir}" />
<!--
        <mkdir dir="${builddir}/headers" />
-->
    </target>

    <path id="default.classpath">
		<fileset dir="../external">
			<include name="*.jar" />
		</fileset>
    </path>

    <target name="compile" depends="prepare">
	
	<javac 	classpathref="default.classpath"
		destdir="${builddir}"
                srcdir="${srcdir}"
                debug="true"
                includeantruntime="false"
                includes="datachallenge/simple/*.java,datachallenge/util/*.java"/>
    </target>

<!--
    <target name="build-native-headers" depends="compile">	
	<javah 	classpath="${builddir}"
		destdir="${builddir}/headers"
		force="yes"
		class="nbia.kernels.Scale"/> 
    </target>

    <target name="build-native" depends="build-native-headers">
        <echo message="${native.compiler.options} ${native.compiler.includes} ${native.compiler.input} ${native.compiler.output}"/>

        <exec executable="${native.compiler}">
                <arg line="${native.compiler.options} ${native.compiler.includes} ${native.compiler.input} ${native.compiler.output}"/>
	</exec>
   </target>
-->

    <!-- Internal target - Builds the JAR file -->
    <target name="jar" depends="compile">

	<delete failonerror="false" file="${distdir}/${jar}" />

	<jar 	jarfile="${distdir}/${jar}"
                basedir="${builddir}"
		includes="**">
       		<manifest>
			<attribute name="Built-By" value="${user.name}"/>
		</manifest>
	</jar>

    </target>

    <target name="show"> 
	<echo message="OS name   : ${os.name}"/>
        <echo message="OS arch   : ${os.arch}"/>
        <echo message="jdk home  : ${jdk.home}"/>
        <echo message="version   : ${kernel.version}"/>
    </target>

    <target name="build" depends="show,clean,prepare,compile,jar">
    </target>

    <!-- remove all generated code -->
    <target name="clean" description="Removes the ${distdir} directory">
        <delete failonerror="false" dir="${builddir}" />
        <delete failonerror="false" dir="${distdir}" />
<!--        
        <delete failonerror="false" file="libEEP.so" />
-->
    </target>

</project>
